/*
 * Hardware_Interface.c
 *
 *  Created on: Oct 31, 2024
 *      Author: MARIO
 */

#include "Hardware_Interface.h"
/* Private variables ---------------------------------------------------------*/


/*void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState);
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout);
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout);
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout);*/




SPI_AGHW_StatusTypeDef SPI_AGHW_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
	SPI_AGHW_StatusTypeDef OK = HAL_SPI_Transmit (&hspi, (uint8_t*)&pData, 1,HAL_MAX_DELAY );

	return (OK==SPI_OK) ? 1 : 0 ;
}
SPI_AGHW_StatusTypeDef SPI_AGHW_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
	SPI_AGHW_StatusTypeDef OK = HAL_SPI_Receive (&hspi, (uint8_t*)&pData, 1,HAL_MAX_DELAY );

		return (OK==SPI_OK) ? 1 : 0 ;
}
SPI_AGHW_StatusTypeDef SPI_AGHW_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
        uint32_t Timeout)
{
	SPI_AGHW_StatusTypeDef OK = HAL_SPI_TransmitReceive (&hspi1, (uint8_t *)&pTxData, (uint8_t *)&pRxData, 1, HAL_MAX_DELAY);

		return (OK==SPI_OK) ? 1 : 0 ;
}
